
import { NextPage } from "next";

/*
 NextPage — это тип, который используется для определения страниц в приложении на Next.js.
  Он включает в себя все необходимые свойства и методы для работы с рендерингом страниц. 
 */


  /* 
   TypeRoles, который описывает объект с свойством isOnlyUser 
    которое необязательно, на свое усмотрение.
  */
// Роль
export type TypeRoles = {
    isOnlyUser?: boolean,
    admin?:boolean
};

/*
NextPageAuth определяеn новый тип, который наследует свойства типа NextPage и добавляет к ним свойства из TypeRoles.
P = {} — это параметр типа, который по умолчанию равен пустому объекту. 
Это позволяет типу NextPageAuth принимать дополнительные свойства, которые могут быть переданы при создании страницы.
Используя &, мы создаём тип, который объединяет свойства NextPage и TypeRoles.
*/
// Создаю тип с добавлением Роли TypeRoles
export type NextPageAuth<P = {}> = NextPage<P> & TypeRoles;

/* 
В этом определении мы создаём тип TypeComponentAuthFileds, который описывает объект с единственным свойством Component.
Это свойство должно быть типа TypeRoles, что означает, что Component может содержать опциональное свойство isOnlyUser.

*/
// Тип для провайдера, для получения типов из Роли 
export type TypeComponentAuthFileds = {Component: TypeRoles};

/*
Вывод
В целом, этот код создаёт типы, которые можно использовать для работы с авторизацией в компонентах и страницах приложения на Next.js. Он позволяет добавлять информацию о ролях пользователей и их правом доступа, что может быть полезно при разработке приложений с разными уровнями доступа.
*/